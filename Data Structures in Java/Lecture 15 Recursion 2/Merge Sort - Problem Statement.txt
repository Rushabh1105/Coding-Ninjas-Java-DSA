Merge Sort - Problem Statement



Send Feedback
You are given the starting 'l' and the ending 'r' positions of the array 'ARR'.


You must sort the elements between 'l' and 'r'.


Note:
Change in the input array itself. So no need to return or print anything.
Example:
Input: ‘N’ = 7,
'ARR' = [2, 13, 4, 1, 3, 6, 28]

Output: [1 2 3 4 6 13 28]

Explanation: After applying 'merge sort' on the input array, the output is [1 2 3 4 6 13 28].
Input format :
The first line contains an integer <em>**'N'**</em> representing the size of the array/list.

The second line contains 'N' single space-separated integers representing the elements in the array/list.
Output format :
You don't need to return anything. In the output, you will see the array after you do the modification.
Sample Input 1:
7
2 13 4 1 3 6 28
Sample Output 1:
1 2 3 4 6 13 28
Explanation of Sample Output 1:
After applying 'merge sort' on the input array, the output is [1 2 3 4 6 13 28].
Sample Input 2:
5
9 3 6 2 0
Sample Output 2:
0 2 3 6 9
Explanation of Sample Output 2:
After applying 'merge sort' on the input array, the output is [0 2 3 6 9].
Constraints :
1 <= N <= 10^3
0 <= ARR[i] <= 10^9


public class Solution {

    public static void mergeSort(int[] arr, int l, int r){
        // Write your code here
        if( arr.length <= 1 ){
            return;
        }

        int[] arr1 = new int[arr.length/2];
		int[] arr2 = new int[arr.length - arr1.length];
		
		for(int i = 0; i < (arr.length / 2); i++) {
			arr1[i] = arr[i];
		}
		
		for(int i = (arr.length / 2); i < arr.length; i++ ) {
			arr2[i - arr.length / 2] = arr[i];
		}
        
        mergeSort(arr1, l, r);
        mergeSort(arr2, l, r);
        merge(arr1, arr2, arr);

    }

    public static void merge( int[] src1, int[] src2, int[] dest ) {
		int i = 0, j = 0, k = 0;
		
		while( i < src1.length && j < src2.length ) {
			if( src1[i] <= src2[j] ) {
				dest[k] = src1[i];
				i++;
				k++;
			}else {
				dest[k] = src2[j];
				j++;
				k++;
			}
		}
		
		while( i < src1.length ) {
			dest[k] = src1[i];
			i++;
			k++;
		}
		
		while( j < src2.length ) {
			dest[k] = src2[j];
			j++;
			k++;
		}
	}
}
