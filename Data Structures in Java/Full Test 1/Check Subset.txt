Check Subset



Send Feedback
Given two integer arrays. Check if second array is a subset of first array.
Input format :
Line 1 : Integer N1 
Line 2 : N1 integers separated be a single space
Line 1 : Integer N2 
Line 2 : N2 integers separated be a single space
Output Format :
 Boolean
Constraints :
 0 <= N1 <= 10^4
 0 <= N2 <= 10^4
Sample Input :
15
3 6 5 8 15 1 14 18 7 9 14 9 3 12 8 
4
18 6 9 8
Sample Output :
true


import java.util.HashMap;
import java.util.Set;

public class solution {
	
	public static boolean CheckSubset(int[] arr1, int n1, int[] arr2, int n2) {
		/*Your class should be named solution. 
		*Don't write main().
		*Don't take input, it is passed as function argument.
		*Don't print output.
		*Taking input and printing output is handled automatically.
		*/ 

		HashMap<Integer,Integer> map1 = new HashMap<>();
		HashMap<Integer,Integer> map2 = new HashMap<>();

		if( n1 == 0 ){
			return false;
		}
		if( n2 == 0 ){
			return true;
		}

		for( int i = 0; i < n1; i++ ){
			if( map1.containsKey( arr1[i]) ){
				map1.put( arr1[i] , map1.get(arr1[i])+1 );
			}else{
				map1.put( arr1[i], 1 );
			}
		}


		for( int i = 0; i < n2; i++ ){
			if( map2.containsKey( arr2[i]) ){
				map2.put( arr2[i] , map2.get(arr2[i])+1 );
			}else{
				map2.put( arr2[i], 1 );
			}
		}

		Set<Integer> keys = map2.keySet();

		for( Integer i : keys ){
			if( map1.containsKey(i) == false ){
				return false;
			}

			if( map1.containsKey(i) ){
				if( map1.get(i) < map2.get(i) ){
					return false;
				}
			}
		}

        return true;
	}

	
}
