Sort an array



Send Feedback
Given an array A[] of integers, sort the array according to frequency of elements. That is elements 
that have higher frequency come first. If frequencies of two elements are same, then smaller number 
comes first.
Input Format:
The first line contains a single integer N denoting the size of array. The second line contains N 
space-separated integers A1, A2, ..., AN denoting the elements of the array. 
Output Format:
Print the soted array seperated by a space.
Example:
Input:
6
1 2 2 2 3 3
Output:
2 2 2 3 3 1


import java.util.*;
public class Solution { 
	public static void main(String[] args) { 
		// Write your code here
		Scanner s = new Scanner(System.in);

		int n = s.nextInt();
		int[] arr = new int[n];

		for( int i = 0; i < n; i++ ){
			arr[i] = s.nextInt();
		}

		HashMap<Integer,Integer> map = new HashMap<>();
		PriorityQueue<Integer> pq = new PriorityQueue<>( (a,b) -> map.get(a) == map.get(b) ? b-a : map.get(a)-map.get(b) );

		for( int i = 0; i < n; i++ ){
			int data = arr[i];
			if( map.containsKey( data )){
				map.put( data , map.get(data)+1 );
			}else{
				map.put( data , 1 );
			}
		}

		int[] ans = new int[n];

		for( int i = 0; i < n; i++ ){
			pq.offer( arr[i] );
		} 

		for( int i = 0; i < n; i++ ){
			ans[i] = pq.poll();
		}
		
		for( int i = n-1; i >= 0; i-- ){
			System.out.print( ans[i] + " ");
		}
	}
} 
