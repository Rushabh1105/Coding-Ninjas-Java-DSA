Reverse the Linked List



Send Feedback
Given a linked list of size N. You need to reverse every k nodes (where k is an input to the function) 
in the linked list.
Input:
First line contains length of linked list and next line contains the linked list elements.
Output:
Single line of output which contains the linked list with every k group elements reversed.
Example:
Input:
8 1 2 2 4 5 6 7 8 4

Output:
4 2 2 1 8 7 6 5

Explanation:
Since, k = 4. So, we have to reverse every group of two elements. Modified linked list is as 
4, 2, 2, 1, 8, 7, 6, 5.



public class Solution{
    public static Node reverse(Node head, int k){
        //Your code here
        //Make change in the linked list only
        //Return the head of the new Linked list
        
        if( head == null ){
            return head;
        }

        Node temp = head;

        for( int i = 0; i < k-1; i++ ){
            if( temp == null ){
                return reverseLL( head, null );
            }
            temp = temp.next;
        }

        if( temp == null ){
            return reverseLL( head, null );
        }   

        Node node = null;
        node = reverse( temp.next , k );
        temp.next = null;
        reverseLL( head, null );
        head.next = node;
        return temp;
    }

    public static Node reverseLL( Node head, Node newHead ){
        if( head == null ){
            return newHead;
        }

        Node temp = head.next;
        head.next = newHead;
        newHead = head;

        return reverseLL( temp, newHead );
    }
}